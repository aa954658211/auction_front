<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gdou.auction.mapper.ItemMapper">
  <resultMap id="BaseResultMapWithItemType" type="com.gdou.auction.pojo.Item">
    <id column="item_id" jdbcType="INTEGER" property="itemId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="startPrice" jdbcType="INTEGER" property="startprice" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="picture" jdbcType="VARCHAR" property="picture" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="item_type_id" jdbcType="INTEGER" property="itemTypeId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <association property="itemType" javaType="itemType">
      <id property="itemTypeId" column="item_type_id"/>
      <result property="name" column="tname"/>
      <result property="description" column="tdescription"/>
    </association>
  </resultMap>

  <resultMap id="BaseResultMap" type="com.gdou.auction.pojo.Item">
    <id column="item_id" jdbcType="INTEGER" property="itemId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="startPrice" jdbcType="INTEGER" property="startprice" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="picture" jdbcType="VARCHAR" property="picture" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="item_type_id" jdbcType="INTEGER" property="itemTypeId" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    item_id, name, startPrice, description, start_time, end_time, picture, user_id, item_type_id,
    status
  </sql>
  <select id="selectByExample" parameterType="com.gdou.auction.pojo.ItemExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from item
    where item_id = #{itemId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from item
    where item_id = #{itemId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.gdou.auction.pojo.ItemExample">
    delete from item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gdou.auction.pojo.Item">
    insert into item (item_id, name, startPrice,
      description, start_time, end_time,
      picture, user_id, item_type_id,
      status)
    values (#{itemId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{startprice,jdbcType=INTEGER},
      #{description,jdbcType=VARCHAR}, #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP},
      #{picture,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{itemTypeId,jdbcType=INTEGER},
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.gdou.auction.pojo.Item" useGeneratedKeys="true" keyProperty="itemId">
    insert into item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="itemId != null">
        item_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="startprice != null">
        startPrice,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="picture != null">
        picture,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="itemTypeId != null">
        item_type_id,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="itemId != null">
        #{itemId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="startprice != null">
        #{startprice,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="picture != null">
        #{picture,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="itemTypeId != null">
        #{itemTypeId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gdou.auction.pojo.ItemExample" resultType="java.lang.Long">
    select count(*) from item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update item
    <set>
      <if test="record.itemId != null">
        item_id = #{record.itemId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.startprice != null">
        startPrice = #{record.startprice,jdbcType=INTEGER},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.picture != null">
        picture = #{record.picture,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.itemTypeId != null">
        item_type_id = #{record.itemTypeId,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update item
    set item_id = #{record.itemId,jdbcType=INTEGER},
    name = #{record.name,jdbcType=VARCHAR},
    startPrice = #{record.startprice,jdbcType=INTEGER},
    description = #{record.description,jdbcType=VARCHAR},
    start_time = #{record.startTime,jdbcType=TIMESTAMP},
    end_time = #{record.endTime,jdbcType=TIMESTAMP},
    picture = #{record.picture,jdbcType=VARCHAR},
    user_id = #{record.userId,jdbcType=INTEGER},
    item_type_id = #{record.itemTypeId,jdbcType=INTEGER},
    status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gdou.auction.pojo.Item">
    update item
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="startprice != null">
        startPrice = #{startprice,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="picture != null">
        picture = #{picture,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="itemTypeId != null">
        item_type_id = #{itemTypeId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where item_id = #{itemId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gdou.auction.pojo.Item">
    update item
    set name = #{name,jdbcType=VARCHAR},
      startPrice = #{startprice,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      picture = #{picture,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      item_type_id = #{itemTypeId,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER}
    where item_id = #{itemId,jdbcType=INTEGER}
  </update>

  <select id="selectByExampleWithItemType" parameterType="com.gdou.auction.pojo.ItemExample" resultMap="BaseResultMapWithItemType">
    select i.*,t.item_type_id,t.name tname,t.description tdescription
    <if test="distinct">
      distinct
    </if>
    from item i left join item_type t
    on i.item_type_id = t.item_type_id
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectByPrimaryKeyWithItemType" parameterType="java.lang.Integer" resultMap="BaseResultMapWithItemType">
    select i.*,t.item_type_id,t.name tname,t.description tdescription
    from item i left join item_type t
    on i.item_type_id = t.item_type_id
    where i.item_id = #{itemId,jdbcType=INTEGER}
  </select>

</mapper>